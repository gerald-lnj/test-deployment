name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

  push:
    paths-ignore:
      - "*.md"
    branches:
      - main
    tags:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
    # Ideally, we want to cancel existing jobs if a new one is triggered, but cancelling `sst deploy` cause the subsequent execution to fail.
    concurrency: deploy-${{ github.event.inputs.environment || ((github.ref_type == 'tag') && 'prod') || 'dev' }}

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # see https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
    permissions:
      id-token: write
      contents: read

    env:
      environment: ${{ github.event.inputs.environment || ((github.ref_type == 'tag') && 'prod') || 'dev' }}
      version: ${{ ((github.ref_type == 'tag') && github.ref) || github.sha }}

    environment:
      name: ${{ github.event.inputs.environment || ((github.ref_type == 'tag') && 'prod') || 'dev' }}

    steps:
      - name: Add deploy key to ssh-agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.RI_IAM_SECRET_KEY }}

      - name: Check out
        uses: actions/checkout@v2

      - name: Update submodules
        run: |
          git submodule update --init --recursive

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install npm dependencies
        run: npm install

      # Setup OIDC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          # Can you imagine situation where a private repo have more than two accounts? Microsoft apparently can't -_-
          # Environment secret for private repo not supported by GitHub. Manual `if` for now.
          role-to-assume: ${{ ((env.environment == 'prod') && secrets.OIDC_ROLE_ARN_PROD) || secrets.OIDC_ROLE_ARN_DEV }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: ${{ env.environment }}
          version: ${{ env.version }}

      - name: Deploy
        run: |
          npx sst deploy --stage ${{ env.environment }} vpc-stack
          npx sst deploy --stage ${{ env.environment }} iam-shared-stack
          npx sst deploy --stage ${{ env.environment }} iam-helper-stack
          npx sst deploy --stage ${{ env.environment }} iam-storage-stack
          npx sst deploy --stage ${{ env.environment }} iam-neptune-query-stack
          npx sst deploy --stage ${{ env.environment }} iam-stepfunction-stack

      - name: Finalize Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: ${{ env.environment }}
          version: ${{ env.version }}
          finalize: true