name: Deploy

on:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - main

env:
  environment_mode: ${{ github.ref_name == 'main' && 'Dev' || github.ref_name == 'release/candidate' && 'Stage' || startsWith(github.ref_name, 'qa') && 'Qa' || startsWith(github.ref_name, 'prod') && 'Prod'}}
  # would be nice if we could `ref_name.split('-')[-1].upper()`
  environment_id: ${{ github.ref_name == 'qa-it' && 'It' || github.ref_name == 'prod-sf' && 'Sf' || (github.ref_name == 'main' || github.ref_name == 'release/candidate' || github.ref_name == 'prod-us1') && 'Us1' || github.ref_name == 'prod-eu1' && 'Eu1' || github.ref_name == 'prod-ap1' && 'Ap1'}}
  version: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
    concurrency: ${{ format('{0}{1}', github.ref_name == 'main' && 'Dev' || startsWith(github.ref_name, 'qa') && 'Qa' || startsWith(github.ref_name, 'prod') && 'Prod', github.ref_name == 'qa-it' && 'It' || github.ref_name == 'prod-sf' && 'Sf' || (github.ref_name == 'main' || github.ref_name == 'prod-us1') && 'Us1' || github.ref_name == 'prod-eu1' && 'Eu1' || github.ref_name == 'prod-ap1' && 'Ap1') }}

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # see https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
    permissions:
      id-token: write
      contents: read

    environment:
      name: ${{ format('{0}{1}', github.ref_name == 'main' && 'Dev' || github.ref_name == 'release/candidate' && 'Stage' || startsWith(github.ref_name, 'qa') && 'Qa' || startsWith(github.ref_name, 'prod') && 'Prod', github.ref_name == 'qa-it' && 'It' || github.ref_name == 'prod-sf' && 'Sf' || (github.ref_name == 'main' || github.ref_name == 'release/candidate' || github.ref_name == 'prod-us1') && 'Us1' || github.ref_name == 'prod-eu1' && 'Eu1' || github.ref_name == 'prod-ap1' && 'Ap1') }}

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'

      - uses: pnpm/action-setup@v2
        with:
          version: '8.6.12'
          run_install: true

      # - name: Build
      #   run: pnpm build --mode $environment_mode$environment_id

      - name: Deploy
        run: cd cdk && ENVIRONMENT_MODE=$environment_mode ENVIRONMENT_ID=$environment_id npx cdk deploy --require-approval never