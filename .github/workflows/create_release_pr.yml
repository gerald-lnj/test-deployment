name: Deploy

on:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - main

jobs:
  cdk_deploy:
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
    concurrency: ${{ github.ref_name }}

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # see https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
    permissions:
      id-token: write
      contents: read

    environment:
      name: ${{ format('{0}{1}', github.ref_name == 'main' && 'Dev' || github.ref_name == 'release/candidate' && 'Stage' || startsWith(github.ref_name, 'qa') && 'Qa' || startsWith(github.ref_name, 'prod') && 'Prod', github.ref_name == 'qa-it' && 'It' || github.ref_name == 'prod-sf' && 'Sf' || (github.ref_name == 'main' || github.ref_name == 'release/candidate' || github.ref_name == 'prod-us1') && 'Us1' || github.ref_name == 'prod-eu1' && 'Eu1' || github.ref_name == 'prod-ap1' && 'Ap1') }}
    
    env:
      AWS_CDK_STACKS: null
      AWS_CDK_STACKS_IGNORE_DEPENDENCY: false
      AWS_CDK_STACKS_EXPRESSION: --all
      AWS_OIDC_ROLE_ARN: ${{ (github.ref_name == 'main' || github.ref_name == 'develop') && 'arn:aws:iam::014762482633:role/GitHubAction-AssumeRoleWithAction' || github.ref_name == 'staging' && 'arn:aws:iam::653191715649:role/GitHubAction-AssumeRoleWithAction' || github.ref_name == 'prod-sf' && 'arn:aws:iam::860524536695:role/GitHubAction-AssumeRoleWithAction' || github.ref_name == 'prod-us1' && 'arn:aws:iam::659495092903:role/GitHubAction-AssumeRoleWithAction' || github.ref_name == 'prod-eu1' && 'arn:aws:iam::706927682327:role/GitHubAction-AssumeRoleWithAction' }}
      AWS_REGION: ${{ (github.ref_name == 'main' || github.ref_name == 'develop') && 'us-east-1' || github.ref_name == 'staging' && 'us-east-1' || github.ref_name == 'prod-sf' && 'eu-west-1' || github.ref_name == 'prod-us1' && 'us-east-1' || github.ref_name == 'prod-eu1' && 'eu-central-1' }}
      ENVIRONMENT_MODE: ${{ (github.ref_name == 'main' || github.ref_name == 'develop') && 'dev' || github.ref_name == 'staging' && 'stage' || (github.ref_name == 'prod-sf' || github.ref_name == 'prod-us1' || github.ref_name == 'prod-eu1') && 'prod' }}
      ENVIRONMENT_ID: ${{ (github.ref_name == 'main' || github.ref_name == 'develop') && 'us1' || github.ref_name == 'staging' && 'us1' || github.ref_name == 'prod-sf' && 'sf' || github.ref_name == 'prod-us1' && 'us1' || github.ref_name == 'prod-eu1' && 'eu1' }}
      NODE_VERSION: '18.17.1'
      PNPM_VERSION: '8.6.12'

    steps:
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: ${{ env.AWS_REGION }}
      #     role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN }}
      #     output-credentials: true

      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          # TODO: Separate the account used for checking out the submodules
          # once we have a less privileged account
          # ssh-key: ${{ secrets.SUBMODULE_SYNC_SSH_KEY }}

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'

      - uses: pnpm/action-setup@v2
        with:
          version: '8.6.12'
          run_install: true

      # - name: Build
      #   run: pnpm build --mode $environment_mode$environment_id

      - name: CDK Deploy
        working-directory: ./cdk
        run: npx cdk deploy --require-approval never --context environmentMode=${{env.ENVIRONMENT_MODE}} --context environmentId=${{ env.ENVIRONMENT_ID }}
